apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api.name }}-deployment

spec:
  replicas: {{ .Values.api.replicas }}

  selector: 
    matchLabels:
      components: {{ .Values.api.components }}

  template: # перенесли часть из пода
    metadata: 
      labels:
        components: {{ .Values.api.components }}
    spec: 
      containers:
        - name: {{ .Values.api.name }}
          image: "{{ .Values.api.image }}:{{ .Values.api.version }}"
          ports: 
            - containerPort: {{ .Values.api.port }}
          resources: 
            limits: {{ .Values.api.limits | toYaml | nindent 14 }}
          env: 
            {{- range .Values.api.envs }}
            {{- $data := dict "name" $.Values.api.name "env" .}}
            {{- include "env.template" $data | indent 12}}
            {{- end }}
          livenessProbe: 
            exec:
              command:
                - curl
                - --fail
                - http://localhost:3000/api
            initialDelaySeconds: 30 # отсрочка после запуска 
            periodSeconds: 5 # период испускания сигнала состояния 
            failureThreshold: 1 # сколько подряд ошибок может быть
          
          startupProbe: # проверка при старте приложения 
            exec:
              command:
                - curl
                - --fail
                - http://localhost:3000/api
            periodSeconds: 5 
            failureThreshold: 1   

          readinessProbe: # проверка по готовности приложения
            exec:
              command:
                - curl
                - --fail
                - http://localhost:3000/api
            initialDelaySeconds: 5  
            periodSeconds: 5 
      volumes:
        - name: test
          configMap:
            name: demo-config